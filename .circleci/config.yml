version: 2.1

orbs:
  docker: circleci/docker@2.0.2
  gcp-cli: circleci/gcp-cli@2.4.0
  gcp-gcr: circleci/gcp-gcr@0.14.1
  kubernetes: circleci/kubernetes@1.3.0
  kustomize: finc/kustomize@0.0.2

### ENVIRONMENT VARIABLE REQUIRED
## Google related variable (Orb required)
# - GOOGLE_PROJECT_ID: the GCP project your in
# - GCLOUD_SERVICE_KEY: the service from IAM
# - GOOGLE_COMPUTE_REGION: the region you use
# - GOOGLE_COMPUTE_ZONE: the zone you use

## Custom variable
# - K8S_CLUSTER_NAME_STAGE: Cluster name for stage
# - K8S_CLUSTER_NAME_INTERNAL: Cluster name for internal
# - K8S_CLUSTER_NAME_PROD: Cluster name for prod

commands:
  deploy:
    parameters:
      env:
        type: string
      cluster-name:
        type: string
    steps:
      - checkout
      - kubernetes/install-kubectl
      - gcp-cli/install
      - gcp-cli/initialize
      - kustomize/install
      - run:
          name: Set up for kubectl access to cluster
          command: gcloud container clusters get-credentials <<parameters.cluster-name>>
      - run:
          name: Set image tag with kustomize
          command: |
            cd k8s/base
            kustomize edit set image images/demo-server=gcr.io/${GOOGLE_PROJECT_ID}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}
            cd -
            kustomize build k8s/overlays/<<parameters.env>> > kubernetes.yaml
      - kubernetes/create-or-update-resource:
          show-kubectl-command: true
          resource-file-path: kubernetes.yaml
      - kubernetes/get-rollout-status:
          resource-file-path: kubernetes.yaml
          watch-timeout: 5m

jobs:
  pr:
    executor: docker/machine
    steps:
      - checkout
      - docker/build:
          image: ${CIRCLE_PROJECT_REPONAME}

  deploy-stage:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - deploy:
          env: stage
          cluster-name: ${K8S_CLUSTER_NAME_STAGE}

  deploy-internal:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - deploy:
          env: internal
          cluster-name: ${K8S_CLUSTER_NAME_INTERNAL}

  deploy-prod:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - deploy:
          env: prod
          cluster-name: ${K8S_CLUSTER_NAME_PROD}

workflows:
  pr:
    jobs:
      - pr:
          filters:
            branches:
              ignore: main

  build-and-deploy:
    jobs:
      - gcp-gcr/build-and-push-image:
          filters:
            branches:
              only: main
          image: ${CIRCLE_PROJECT_REPONAME}
          tag: ${CIRCLE_SHA1}
      - deploy-stage:
          requires:
            - gcp-gcr/build-and-push-image
      - deploy-internal-hold:
          type: approval
          requires:
            - deploy-stage
      - deploy-internal:
          requires:
            - deploy-internal-hold
  deploy-prod:
    jobs:
      - deploy-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/